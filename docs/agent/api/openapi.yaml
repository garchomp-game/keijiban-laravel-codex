openapi: 3.1.0
info:
  title: Keijiban API
  version: 0.1.0
servers:
  - url: http://localhost/api
paths:
  /auth/register:
    post:
      summary: Register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, password_confirmation]
              properties:
                name: { type: string }
                email: { type: string, format: email }
                password: { type: string, minLength: 8 }
                password_confirmation: { type: string }
      responses:
        '201': { description: created }
        '422': { description: validation error }
  /auth/login:
    post:
      summary: Login (Sanctum SPA, sets cookie)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string }
      responses:
        '204': { description: no content }
        '401': { description: unauthorized }
  /auth/logout:
    post:
      summary: Logout
      responses:
        '204': { description: no content }
  /user:
    get:
      summary: Current user
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id: { type: integer }
                      name: { type: string }
                      email: { type: string }
  /threads:
    get: { summary: List threads, responses: { '200': { description: ok } } }
    post:
      summary: Create thread
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, body]
              properties:
                title: { type: string }
                body: { type: string }
      responses: { '201': { description: created } }
  /threads/{id}:
    get: { summary: Get thread, responses: { '200': { description: ok }, '404': { description: not found } } }
    patch: { summary: Update (owner only), responses: { '200': { description: ok }, '403': { description: forbidden } } }
    delete: { summary: Delete (owner only), responses: { '204': { description: no content } } }
  /threads/{id}/posts:
    get: { summary: List posts, responses: { '200': { description: ok } } }
    post:
      summary: Create post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [body]
              properties:
                body: { type: string }
      responses: { '201': { description: created } }
