openapi: 3.1.0
info:
  title: Keijiban API
  version: 0.1.0
  license:
    name: MIT
servers:
  - url: http://localhost/api
security:
  - cookieAuth: []
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: XSRF-TOKEN
paths:
  /auth/register:
    post:
      operationId: authRegister
      security: []
      summary: Register
      responses:
        '201': { description: created }
        '422': { description: validation }
  /auth/login:
    post:
      operationId: authLogin
      security: []
      summary: Login (sets cookie)
      responses:
        '204': { description: ok }
        '401': { description: unauthorized }
  /auth/logout:
    post:
      operationId: authLogout
      summary: Logout
      responses:
        '204': { description: ok }
        '401': { description: unauthorized }
  /user:
    get:
      operationId: getCurrentUser
      summary: Current user
      responses:
        '200': { description: ok }
        '401': { description: unauthorized }
  /threads:
    get:
      operationId: listThreads
      summary: List threads
      responses:
        '200': { description: ok }
        '401': { description: unauthorized }
    post:
      operationId: createThread
      summary: Create thread
      responses:
        '201': { description: created }
        '401': { description: unauthorized }
  /threads/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: integer }
    get:
      operationId: getThread
      summary: Get thread
      responses:
        '200': { description: ok }
        '404': { description: not found }
        '401': { description: unauthorized }
    patch:
      operationId: updateThread
      summary: Update (owner only)
      responses:
        '200': { description: ok }
        '403': { description: forbidden }
        '401': { description: unauthorized }
    delete:
      operationId: deleteThread
      summary: Delete (owner only)
      responses:
        '204': { description: ok }
        '401': { description: unauthorized }
  /threads/{id}/posts:
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: integer }
    get:
      operationId: listPosts
      summary: List posts
      responses:
        '200': { description: ok }
        '401': { description: unauthorized }
    post:
      operationId: createPost
      summary: Create post
      responses:
        '201': { description: created }
        '401': { description: unauthorized }
